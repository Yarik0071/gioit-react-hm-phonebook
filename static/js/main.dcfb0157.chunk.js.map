{"version":3,"sources":["components/ContactsList/contactlist.js","components/ContactForm/contactform.js","components/Filter/filter.js","index.js"],"names":["ContactList","contacts","remuveContact","className","map","id","name","number","key","type","onClick","ContactForm","state","handleChange","e","preventDefault","target","value","setState","filterName","props","addContact","filter","item","length","alert","handleSubmit","this","onSubmit","onChange","Component","Filter","handleFilter","App","changeFilter","toLowerCase","includes","value1","value2","contact","uuidv4","prevState","filterContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcfb0157.chunk.js","sourcesContent":["import React from \"react\"\n\n\nexport default function ContactList({ contacts, remuveContact}) {\n  return (\n    <>\n      <ul className=\"contactList\">\n        {\" \"}\n        {contacts.map(({ id, name, number }) => (\n          <li className=\"contactListItem\" key={id} id={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button\n              className=\"buttonDelete\"\n              type=\"button\"\n              onClick={() => {\n                remuveContact(id);\n              }}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}","import React, { Component } from \"react\"\n\nexport default class ContactForm extends Component {\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handleChange = e => {\n    e.preventDefault()\n    const { name, value } = e.target \n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  filterName = () => {\n    const { contacts, addContact } = this.props\n    const { name, number } = this.state\n\n    let initialValue = contacts.filter(item => item.name === name)\n    if(initialValue.length > 0) {\n      alert(`${name} is already in contacts`)\n    } else {\n      addContact(name, number)\n    }\n  }\n\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { addContact } = this.props\n    const { name, number } = this.state\n\n    this.props.contacts.length > 0 ? this.filterName() : addContact(name, number)\n\n    this.setState({\n      name: '',\n      number: ''\n    })\n  }\n\n  render() {\n    const { name, number } = this.state\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className=\"formInput\"\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <label>\n          Number\n          <input\n            className=\"formInput\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\" className=\"buttonSubmit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}","import React from \"react\"\n\nexport default function Filter({ handleFilter }) {\nreturn (\n    <label\n    className=\"filter\"\n    > \n      Find contacts by name\n      <input \n      type=\"name\"\n      name=\"filter\"\n      onChange={handleFilter}\n      ></input>\n      </label>\n)\n}","import React, {Component} from \"react\";\nimport ReactDOM from 'react-dom';\nimport {v4 as uuidv4} from 'uuid';\nimport ContactList from \"./components/ContactsList/contactlist.js\"\nimport ContactForm from \"./components/ContactForm/contactform.js\"\nimport Filter from \"./components/Filter/filter.js\"\n\nimport \"./components/ContactForm/contactform.css\"\nimport \"./components/ContactsList/contactlist.css\"\nimport \"./components/Filter/filter.css\"\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (value1, value2) => {\n    const contact = {\n      name: value1,\n      number: value2,\n      id: uuidv4(),\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  filterName = (value) => {\n    this.state.contacts.map((item) => item.name === value && alert(\"stop!\"));\n  };\n\n  handleFilter = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  remuveContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((item) => item.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const filterContact = this.changeFilter();\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm\n            addContact={this.addContact}\n            contacts={this.state.contacts}\n          />\n\n          <h2>Contacts</h2>\n          <Filter handleFilter={this.handleFilter} />\n          {filterContact.length > 0 && (\n            <ContactList\n              contacts={filterContact}\n              remuveContact={this.remuveContact}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nReactDOM.render( <App /> , document.getElementById('root'));"],"sourceRoot":""}